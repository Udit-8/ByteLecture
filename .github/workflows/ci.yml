name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
          
      - name: Install backend dependencies
        run: |
          cd backend
          npm ci
          
      - name: Run backend linting
        run: |
          cd backend
          npm run lint
          
      - name: Run backend build
        run: |
          cd backend
          npm run build
          
      - name: Run backend tests
        run: |
          cd backend
          npm test
        env:
          NODE_ENV: test

  test-mobile:
    name: Test Mobile App
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
          
      - name: Install mobile dependencies
        run: |
          cd mobile
          npm ci
          
      - name: Run mobile linting
        run: |
          cd mobile
          npm run lint
          
      - name: Check TypeScript compilation
        run: |
          cd mobile
          npx tsc --noEmit

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run security audit - Backend
        run: |
          cd backend
          npm audit --audit-level=moderate
          
      - name: Run security audit - Mobile
        run: |
          cd mobile
          npm audit --audit-level=moderate

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test-backend, test-mobile, security-scan]
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Build backend
        run: |
          cd backend
          npm ci
          npm run build
          
      - name: Deploy staging
        run: |
          echo "ðŸš€ Deploying to staging environment..."
          # Add your staging deployment commands here
          # e.g., deploy to Heroku, Railway, or your preferred platform

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test-backend, test-mobile, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Build backend
        run: |
          cd backend
          npm ci
          npm run build
          
      - name: Deploy production
        run: |
          echo "ðŸš€ Deploying to production environment..."
          # Add your production deployment commands here
          # e.g., deploy to Heroku, Railway, or your preferred platform 